#include <QApplication>
//#include <QTableView>
#include "mainwindow.h"

// Точка входа в программу
// argc - количество аргументов командной строки
// argv - массив строк с аргументами командной строки
int main(int argc, char* argv[]) {
    // QApplication - основной класс любого Qt-приложения с GUI
    // Он управляет:
    // - Главным циклом событий (event loop)
    // - Инициализацией виджетов
    // - Обработкой системных событий (клавиатура, мышь, таймеры)
    // - Стилями и темами приложения
    // - Завершением работы приложения
    QApplication app(argc, argv);

    // Создаём объект главного окна на стеке
    // Преимущество: автоматическое удаление при выходе из области видимости
    // Альтернатива: MainWindow* window = new MainWindow(); (в куче)
    MainWindow window;

    // Устанавливаем заголовок окна
    // QStringLiteral - макрос для создания строки Qt во время компиляции
    // Это более эффективно, чем QString("...") который создаёт строку во время выполнения
    window.setWindowTitle(QStringLiteral("Qt Widgets — проверка"));

    // Устанавливаем начальный размер окна
    // Пользователь может изменить размер окна после запуска
    window.resize(300, 180);

    // Показываем окно на экране
    // До вызова show() окно существует в памяти, но не видно пользователю
    // Альтернативы:
    // - showMaximized(): показать развёрнутым
    // - showMinimized(): показать свёрнутым
    // - showFullScreen(): полноэкранный режим
    window.show();

    // Запускаем главный цикл обработки событий (event loop)
    // app.exec() блокирует выполнение и:
    // 1. Ожидает события (клики, нажатия клавиш, таймеры и т.д.)
    // 2. Обрабатывает события через систему сигналов и слотов
    // 3. Перерисовывает виджеты при необходимости
    // 4. Возвращает код завершения при закрытии приложения
    //
    // Цикл завершается когда:
    // - Закрыто последнее окно (по умолчанию)
    // - Вызван QApplication::quit()
    // - Вызван QApplication::exit(код_возврата)
    return app.exec();
}
